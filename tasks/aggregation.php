<?php 
/*
Агрегация - это форма композиции, при которой один объект (агрегатор) содержит ссылку на другой объект (агрегат). Агрегат может существовать независимо от агрегатора и может быть связан с другими агрегаторами или использоваться в разных контекстах.

В отличие от композиции, при которой объекты являются частями друг друга и не могут существовать независимо, агрегаты могут быть связаны с агрегаторами и другими объектами на более свободной основе.
*/

class Order {
    private $id;
    private $items;

    public function __construct($id) {
        $this->id = $id;
        $this->items = [];
    }

    public function addItem($item) {
        $this->items[] = $item;
    }

    public function getItems() {
        return $this->items;
    }
}

class Item {
    private $name;
    private $price;

    public function __construct($name, $price) {
        $this->name = $name;
        $this->price = $price;
    }

    public function getName() {
        return $this->name;
    }

    public function getPrice() {
        return $this->price;
    }
}

/*
В этом примере у нас есть класс Order, который представляет заказ с определенным идентификатором и содержит массив элементов заказа. Каждый элемент заказа представлен объектом класса Item.

Класс Order агрегирует (содержит ссылку на) объекты Item. Он имеет методы addItem(), чтобы добавлять элементы заказа, и getItems(), чтобы получать все элементы заказа.

*/

// Создаем объекты элементов заказа
$item1 = new Item("Product 1", 10);
$item2 = new Item("Product 2", 20);

// Создаем объект заказа
$order = new Order(1);

// Добавляем элементы заказа
$order->addItem($item1);
$order->addItem($item2);

// Получаем все элементы заказа
$items = $order->getItems();

// Выводим информацию о каждом элементе заказа
foreach ($items as $item) {
    echo "Item: " . $item->getName() . ", Price: $" . $item->getPrice() . PHP_EOL;
}

/*

В этом примере мы создаем объекты Item (элементы заказа) и добавляем их в объект Order (заказ) через метод addItem(). Затем мы получаем все элементы заказа с помощью метода getItems() и выводим информацию о каждом элементе.

Агрегация позволяет создавать более сложные структуры, где объекты могут быть связаны между собой, но при этом иметь более свободную зависимость. В данном случае объект Order агрегирует объекты Item, но эти элементы могут быть использованы и в других контекстах или заказах.
*/